.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Module::Install::RTx 3"
.TH Module::Install::RTx 3 "2014-12-24" "perl v5.20.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Module::Install::RTx \- RT extension installer
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
In the \fIMakefile.PL\fR of the \f(CW\*(C`RT\-Extension\-Example\*(C'\fR module:
.PP
.Vb 2
\&    use inc::Module::Install;
\&    RTx \*(AqRT\-Extension\-Example\*(Aq;
\&
\&    requires_rt \*(Aq4.2.0\*(Aq;
\&    rt_too_new  \*(Aq4.4.0\*(Aq;
\&
\&    WriteAll();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This \fBModule::Install\fR extension implements several functions for
installing \s-1RT\s0 extensions:
.SS "RTx '\fIextension name\fP'"
.IX Subsection "RTx 'extension name'"
This function arranges for the following directories to be installed, if
they exist (assuming \f(CW\*(C`RTx(\*(AqRT\-Extension\-Example\*(Aq)\*(C'\fR):
.PP
.Vb 8
\&    ./bin    => $RT::LocalPluginPath/RT\-Extension\-Example/bin
\&    ./etc    => $RT::LocalPluginPath/RT\-Extension\-Example/etc
\&    ./html   => $RT::LocalPluginPath/RT\-Extension\-Example/html
\&    ./lib    => $RT::LocalPluginPath/RT\-Extension\-Example/lib
\&    ./po     => $RT::LocalPluginPath/RT\-Extension\-Example/po
\&    ./sbin   => $RT::LocalPluginPath/RT\-Extension\-Example/sbin
\&    ./static => $RT::LocalPluginPath/RT\-Extension\-Example/static
\&    ./var    => $RT::LocalPluginPath/RT\-Extension\-Example/var
.Ve
.PP
Accepts an optional argument hashref after the extension name with two possible keys
.SS "deprecated_rt"
.IX Subsection "deprecated_rt"
.Vb 1
\&    If set to a true value, skips the enforced RT\-4.0.0 minimum version check
\&
\&    You should set a perl_version if using this option and requires_rt(), because requires_rt
\&    only handles figuring our what perl you need if you\*(Aqre on RT 4.0.0 or higher.
.Ve
.SS "no_readme_generation"
.IX Subsection "no_readme_generation"
.Vb 1
\&    If set to a true value, will not call readme_from on the extension\*(Aqs primary perl module.
.Ve
.SS "requires_rt \fIversion\fP"
.IX Subsection "requires_rt version"
Takes one argument, a valid \s-1RT\s0 version. If an attempt is made to install
on an \s-1RT\s0 than that version, it will die before Makefile creation.
.SS "requires_rt_plugin \fIRT::Extension::Example\fP [, \fIversion\fP]"
.IX Subsection "requires_rt_plugin RT::Extension::Example [, version]"
Ensures that the given \s-1RT\s0 extension (and optional version) is installed
in the target \s-1RT\s0 instance; \f(CW\*(C`requires\*(C'\fR cannot be used because \s-1RT\s0
extensions are not in \f(CW@INC\fR.
.SS "rt_too_new \fIversion\fP [, \fImessage\fP]"
.IX Subsection "rt_too_new version [, message]"
Takes one argument, a valid \s-1RT\s0 version, and prevents this module from
being installed on any version of \s-1RT\s0 equal to or newer than that.
Useful if a particular release of an extension only works on 4.0.x but
not 4.2.x.
.PP
Takes an optional second argument which allows you to specify a custom
error message. This message is passed to sprintf with two string
arguments, the current \s-1RT\s0 version and the version you specify.
.SH "CAVEATS"
.IX Header "CAVEATS"
.IP "\(bu" 4
Us the full name when calling RTx method in Makefile.PL; while
\&\f(CW\*(C`RTx(\*(AqFoo\*(Aq)\*(C'\fR was once supported, it is no longer.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\s-1RTHOME\s0" 4
.IX Item "RTHOME"
Path to the \s-1RT\s0 installation that contains a valid \fIlib/RT.pm\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Module::Install
.PP
<http://www.bestpractical.com/rt/>
.SH "AUTHORS"
.IX Header "AUTHORS"
Best Practical Solutions
.PP
(Originally) Audrey Tang <cpan@audreyt.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2003, 2004, 2007 by Audrey Tang <cpan@audreyt.org>.
Copyright 2008\-2014 Best Practical Solutions
.PP
This software is released under the \s-1MIT\s0 license cited below.
.ie n .SS "The ""\s-1MIT""\s0 License"
.el .SS "The ``\s-1MIT''\s0 License"
.IX Subsection "The MIT License"
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the \*(L"Software\*(R"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
.PP
\&\s-1THE SOFTWARE IS PROVIDED \*(L"AS IS\*(R", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.\s0
