package HTML::Mason::Commands;
use strict;
use vars qw($m $DECODED_ARGS $r %session);
HTML::Mason::Component::FileBased->new(
'code' => sub {
HTML::Mason::Exception::Params->throw
    ( error =>
      "Odd number of parameters passed to component expecting name/value pairs"
    ) if @_ % 2;
my ( $Conditions );
{
    my %pos;
    for ( my $x = 0; $x < @_; $x += 2 )
    {
        $pos{ $_[$x] } = $x + 1;
    }
#line 2 "/RT-Extension-PriorityAsString/html/Callbacks/PriorityAsString/Search/Elements/PickBasics/Default"
     $Conditions = exists $pos{'Conditions'} ? $_[ $pos{'Conditions'} ] :  undef;
}
$m->debug_hook( $m->current_comp->path ) if ( HTML::Mason::Compiler::IN_PERL_DB() );

#line 4 "/RT-Extension-PriorityAsString/html/Callbacks/PriorityAsString/Search/Elements/PickBasics/Default"

my %queues = %{ $m->caller_args(1)->{queues} || {} };

my %as_string = RT->Config->Get('PriorityAsStringQueues');

# Leave it as-is if all queues use PriorityAsString; the overridden
# /Elements/SelectPriority catches this case and always shows the
# drop-down
return unless %as_string;

# Display the number input unless we know what queue's we're working
# with
return unless %queues;

# Display the number input unless all queues specified use
# PriorityAsString
return unless scalar(keys %queues) == grep {$as_string{$_}} keys %queues;

# Additionally, all queues in PriorityAsStringQueues must use the _same_
# values for each name; if "High" is mapped to 10 in one queue and 100
# in another, we can't use names
my %values;
for my $q (keys %queues) {
    for my $priority (keys %{$as_string{$q}}) {
        return if exists $values{$priority} and $as_string{$q}{$priority} != $values{$priority};
        $values{$priority} = $as_string{$q}{$priority};
    }
}

# Swap out the /Elements/SelectPriority for /Elements/SelectPriorityAsString
my ($priority) = grep {$_->{Name} eq "Priority"} @{ $Conditions };
$priority->{Value}{Path} = "/Elements/SelectPriorityAsString";
$priority->{Value}{Arguments}{Mapping} = \%values;
;return;
},
'declared_args' => {
  '$Conditions' => { default => ' undef' }
},
'load_time' => 1434746455,

)
;