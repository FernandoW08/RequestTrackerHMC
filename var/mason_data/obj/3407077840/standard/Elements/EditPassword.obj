package HTML::Mason::Commands;
use strict;
use vars qw($m $DECODED_ARGS $r %session);
HTML::Mason::Component::FileBased->new(
'code' => sub {
HTML::Mason::Exception::Params->throw
    ( error =>
      "Odd number of parameters passed to component expecting name/value pairs"
    ) if @_ % 2;
my ( $User, @Name );
{
    my %pos;
    for ( my $x = 0; $x < @_; $x += 2 )
    {
        $pos{ $_[$x] } = $x + 1;
    }

    foreach my $arg ( qw( User ) )
    {
        HTML::Mason::Exception::Params->throw
            ( error => "no value sent for required parameter '$arg'" )
                unless exists $pos{$arg};
    }
#line 74 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
    $User = $_[ $pos{'User'} ];
#line 75 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
     @Name = exists $pos{'Name'} ? HTML::Mason::Tools::coerce_to_array( $_[ $pos{'Name'} ], '@Name') :  qw(CurrentPass NewPass1 NewPass2);
}
$m->debug_hook( $m->current_comp->path ) if ( HTML::Mason::Compiler::IN_PERL_DB() );

#line 77 "/var/www/localhost/htdocs/rt/Elements/EditPassword"


my %cond = $User->CurrentUserRequireToSetPassword;

#line 1 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2015 Best Practical Solutions, LLC
#                                          <sales@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
 unless ( $cond{'CanSet'} ) {
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $cond{'Reason'} )) );
#line 49 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( '<br />
' );
#line 50 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
 } else {
$m->print( '<table>

' );
#line 53 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
 if ( $cond{'RequireCurrent'} ) {
$m->print( '<tr>
<td class="label">' );
#line 55 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->comp( { content => sub {
#line 55 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( '[_1]\'s current password' );
#line 55 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
} }, '/l', $session{'CurrentUser'}->Name()
 );
#line 55 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( ':</td>
<td class="value"><input type="password" name="' );
#line 56 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $Name[0] )) );
#line 56 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( '" size="16" autocomplete="off" /></td>
</tr>
' );
#line 58 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
 }
$m->print( '
<tr>
<td class="label">' );
#line 61 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->comp( { content => sub {
#line 61 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( 'New password' );
#line 61 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
} }, '/l'
 );
#line 61 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( ':</td>
<td class="value"><input type="password" name="' );
#line 62 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $Name[1] )) );
#line 62 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( '" size="16" autocomplete="off" /></td>
</tr>

<tr>
<td class="label">' );
#line 66 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->comp( { content => sub {
#line 66 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( 'Retype Password' );
#line 66 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
} }, '/l'
 );
#line 66 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( ':</td>
<td class="value"><input type="password" name="' );
#line 67 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $Name[2] )) );
#line 67 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
$m->print( '" size="16" autocomplete="off" /></td>
</tr>

</table>
' );
#line 71 "/var/www/localhost/htdocs/rt/Elements/EditPassword"
 }
$m->print( '
' );
;return;
},
'declared_args' => {
  '$User' => { default => undef },
  '@Name' => { default => ' qw(CurrentPass NewPass1 NewPass2)' }
},
'load_time' => 1434739338,

)
;