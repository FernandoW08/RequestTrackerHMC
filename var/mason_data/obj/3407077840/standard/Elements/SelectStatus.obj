package HTML::Mason::Commands;
use strict;
use vars qw($m $DECODED_ARGS $r %session);
HTML::Mason::Component::FileBased->new(
'code' => sub {
HTML::Mason::Exception::Params->throw
    ( error =>
      "Odd number of parameters passed to component expecting name/value pairs"
    ) if @_ % 2;
my ( $Name, $Type, @Statuses, $Object, @Lifecycles, $Default, $SkipDeleted, $DefaultValue, $DefaultLabel, $Multiple, $Size );
{
    my %pos;
    for ( my $x = 0; $x < @_; $x += 2 )
    {
        $pos{ $_[$x] } = $x + 1;
    }
#line 129 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     $Name = exists $pos{'Name'} ? $_[ $pos{'Name'} ] :  undef;
#line 130 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     $Type = exists $pos{'Type'} ? $_[ $pos{'Type'} ] :  undef,;
#line 132 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     @Statuses = exists $pos{'Statuses'} ? HTML::Mason::Tools::coerce_to_array( $_[ $pos{'Statuses'} ], '@Statuses') :  ();
#line 133 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     $Object = exists $pos{'Object'} ? $_[ $pos{'Object'} ] :  undef,;
#line 134 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     @Lifecycles = exists $pos{'Lifecycles'} ? HTML::Mason::Tools::coerce_to_array( $_[ $pos{'Lifecycles'} ], '@Lifecycles') :  (),;
#line 136 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     $Default = exists $pos{'Default'} ? $_[ $pos{'Default'} ] :  '';
#line 137 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     $SkipDeleted = exists $pos{'SkipDeleted'} ? $_[ $pos{'SkipDeleted'} ] :  0;
#line 138 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     $DefaultValue = exists $pos{'DefaultValue'} ? $_[ $pos{'DefaultValue'} ] :  1;
#line 139 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     $DefaultLabel = exists $pos{'DefaultLabel'} ? $_[ $pos{'DefaultLabel'} ] :  "-";
#line 141 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     $Multiple = exists $pos{'Multiple'} ? $_[ $pos{'Multiple'} ] :  0;
#line 142 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     $Size = exists $pos{'Size'} ? $_[ $pos{'Size'} ] :  6;
}
$m->debug_hook( $m->current_comp->path ) if ( HTML::Mason::Compiler::IN_PERL_DB() );

#line 66 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"

### XXX: no cover for Tools/MyDay.html

my %statuses_by_lifecycle;
if ( @Statuses ) {
    $statuses_by_lifecycle{''} = \@Statuses;
} else {
    if ( $Object ) {
        my $lifecycle = $Object->LifecycleObj;
        if ($Object->_Accessible("Status", "read")) {
            my $current = $Object->Status;
            my @status;
            push @status, $current;

            my %has = ();
            foreach my $next ( $lifecycle->Transitions( $current ) ) {
                my $check = $lifecycle->CheckRight( $current => $next );
                $has{ $check } = $Object->CurrentUserHasRight( $check )
                    unless exists $has{ $check };
                push @status, $next if $has{ $check };
            }
            $statuses_by_lifecycle{$lifecycle->Name} = \@status;
        } else {
            $statuses_by_lifecycle{$lifecycle->Name} = [ $lifecycle->Transitions('') ];
        }
    }
    for my $lifecycle ( @Lifecycles ) {
        $statuses_by_lifecycle{$lifecycle->Name} ||= [ $lifecycle->Valid ];
    }

    if (not keys %statuses_by_lifecycle) {
        for my $lifecycle (map { RT::Lifecycle->Load($_) } RT::Lifecycle->List($Type)) {
            $statuses_by_lifecycle{$lifecycle->Name} = [ $lifecycle->Valid ];
        }
    }
}

if (keys %statuses_by_lifecycle) {
    my %simplified;
    my $key = sub {
        join "\0", sort @{$_[0]};
    };
    for my $name (sort keys %statuses_by_lifecycle) {
        my $matched;
        my $statuses = $statuses_by_lifecycle{$name};
        for my $simple (sort keys %simplified) {
            if ($key->($statuses) eq $key->($simplified{$simple})) {
                # Statuses are the same, join 'em!
                $simplified{"$simple, $name"} = delete $simplified{$simple};
                $matched++;
                last;
            }
        }
        unless ($matched) {
            $simplified{$name} = $statuses;
        }
    }
    %statuses_by_lifecycle = %simplified;
}

my $group_by_lifecycle = keys %statuses_by_lifecycle > 1;
#line 1 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2015 Best Practical Solutions, LLC
#                                          <sales@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
$m->print( '<select name="' );
#line 48 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ($Name)) );
#line 48 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( '" ' );
#line 48 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print(  $Multiple ? qq{multiple="multiple" size="$Size"} : '' );
#line 48 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( '>
' );
#line 49 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
 if ( $DefaultValue ) {
$m->print( '<option value=""' );
#line 50 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print(  !$Default && qq[ selected="selected"] );
#line 50 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( '>' );
#line 50 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $DefaultLabel )) );
#line 50 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( '</option>
' );
#line 51 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
 }
 for my $lifecycle (sort keys %statuses_by_lifecycle) {
     if ($group_by_lifecycle) {
$m->print( '<optgroup label="' );
#line 54 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $lifecycle )) );
#line 54 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( '">
' );
#line 55 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     }
     foreach my $status (@{$statuses_by_lifecycle{$lifecycle}}) {
         next if ($SkipDeleted && lc $status eq 'deleted');
         my $selected = defined $Default && $status eq $Default ? 'selected="selected"' : '';
$m->print( '<option value="' );
#line 59 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $status )) );
#line 59 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( '" ' );
#line 59 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print(  $selected );
#line 59 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( '>' );
#line 59 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( loc($status) )) );
#line 59 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
$m->print( '</option>
' );
#line 60 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     }
     if ($group_by_lifecycle) {
$m->print( '</optgroup>
' );
#line 63 "/var/www/localhost/htdocs/rt/Elements/SelectStatus"
     }
 }
$m->print( '</select>
' );
;return;
},
'declared_args' => {
  '$Default' => { default => ' \'\'' },
  '$DefaultLabel' => { default => ' "-"' },
  '$DefaultValue' => { default => ' 1' },
  '$Multiple' => { default => ' 0' },
  '$Name' => { default => ' undef' },
  '$Object' => { default => ' undef,' },
  '$Size' => { default => ' 6' },
  '$SkipDeleted' => { default => ' 0' },
  '$Type' => { default => ' undef,' },
  '@Lifecycles' => { default => ' (),' },
  '@Statuses' => { default => ' ()' }
},
'load_time' => 1434735752,

)
;