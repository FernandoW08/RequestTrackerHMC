package HTML::Mason::Commands;
use strict;
use vars qw($m $DECODED_ARGS $r %session);
HTML::Mason::Component::FileBased->new(
'code' => sub {
HTML::Mason::Exception::Params->throw
    ( error =>
      "Odd number of parameters passed to component expecting name/value pairs"
    ) if @_ % 2;
my %ARGS = @_;
my ( $User, $IncludeSuperuserGroups );
{
    my %pos;
    for ( my $x = 0; $x < @_; $x += 2 )
    {
        $pos{ $_[$x] } = $x + 1;
    }
#line 81 "/var/www/localhost/htdocs/rt/Dashboards/Elements/ListOfDashboards"
     $User = exists $pos{'User'} ? $_[ $pos{'User'} ] :  $session{CurrentUser};
#line 82 "/var/www/localhost/htdocs/rt/Dashboards/Elements/ListOfDashboards"
     $IncludeSuperuserGroups = exists $pos{'IncludeSuperuserGroups'} ? $_[ $pos{'IncludeSuperuserGroups'} ] :  1;
}
$m->debug_hook( $m->current_comp->path ) if ( HTML::Mason::Compiler::IN_PERL_DB() );

#line 48 "/var/www/localhost/htdocs/rt/Dashboards/Elements/ListOfDashboards"

# put the list of dashboards into the navigation
use RT::Dashboard;
my @objs = RT::Dashboard->new($User)->ObjectsForLoading(
               IncludeSuperuserGroups => $IncludeSuperuserGroups
           );

my %dashboard_map;

for my $object (@objs) {
    my $new_dashboards = $m->comp("/Dashboards/Elements/DashboardsForObject",
            Object => $object, User => $User );

    push @{ $dashboard_map{$_} }, @{ $new_dashboards->{$_} || [] }
        for qw/personal system/;

    push @{ $dashboard_map{group}{$_} }, @{ $new_dashboards->{group}{$_} }
        for keys %{ $new_dashboards->{group} || {} };
}

my @dashboards = (
    (sort { $a->Id <=> $b->Id } @{ $dashboard_map{personal} || [] }),
    (sort { $a->Id <=> $b->Id } @{ $dashboard_map{system}   || [] }),

    map { sort { $a->Id <=> $b->Id } @{ $dashboard_map{group}{$_} } }
        keys %{ $dashboard_map{group} || {} },
);

$m->callback(%ARGS, dashboards => \@dashboards, CallbackName => 'ModifyDashboards');

return @dashboards;
#line 1 "/var/www/localhost/htdocs/rt/Dashboards/Elements/ListOfDashboards"
# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2015 Best Practical Solutions, LLC
#                                          <sales@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
;return;
},
'declared_args' => {
  '$IncludeSuperuserGroups' => { default => ' 1' },
  '$User' => { default => ' $session{CurrentUser}' }
},
'load_time' => 1434738709,

)
;