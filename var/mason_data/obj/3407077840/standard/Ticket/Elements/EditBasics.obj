package HTML::Mason::Commands;
use strict;
use vars qw($m $DECODED_ARGS $r %session);
HTML::Mason::Component::FileBased->new(
'code' => sub {
HTML::Mason::Exception::Params->throw
    ( error =>
      "Odd number of parameters passed to component expecting name/value pairs"
    ) if @_ % 2;
my %ARGS = @_;
my ( $TicketObj, @fields, $InTable, %defaults );
{
    my %pos;
    for ( my $x = 0; $x < @_; $x += 2 )
    {
        $pos{ $_[$x] } = $x + 1;
    }
#line 49 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
     $TicketObj = exists $pos{'TicketObj'} ? $_[ $pos{'TicketObj'} ] :  undef;
#line 50 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
     @fields = exists $pos{'fields'} ? HTML::Mason::Tools::coerce_to_array( $_[ $pos{'fields'} ], '@fields') :  ();
#line 51 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
     $InTable = exists $pos{'InTable'} ? $_[ $pos{'InTable'} ] :  0;
#line 52 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
     %defaults = exists $pos{'defaults'} ? HTML::Mason::Tools::coerce_to_hash( $_[ $pos{'defaults'} ], '%defaults') :  ();
}
$m->debug_hook( $m->current_comp->path ) if ( HTML::Mason::Compiler::IN_PERL_DB() );

#line 54 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"

unless ( @fields ) {
    my $subject = $defaults{'Subject'} || $TicketObj->Subject;
    @fields = (
        {   name => 'Subject',
            html => '<input name="Subject" value="'.(defined($subject) ? $m->interp->apply_escapes( $subject, 'h' ) : '').'" />',
        },
        {   name => 'Status',
            comp => '/Ticket/Elements/SelectStatus',
            args => {
                Name => 'Status',
                Default => $defaults{Status},
                DefaultFromArgs => 0,
                TicketObj => $TicketObj,
            },
        },
        {   name => 'Queue',
            comp => '/Elements/SelectQueue',
            args => {
                Name => 'Queue',
                Default => $defaults{'Queue'} || $TicketObj->QueueObj->Id,
                ShowNullOption => 0,
            }
        },
        {   name => 'Owner',
            comp => '/Elements/SelectOwner',
            args => {
                Name => 'Owner',
                QueueObj => $TicketObj->QueueObj,
                TicketObj => $TicketObj,
                Default => $defaults{'Owner'} || $TicketObj->OwnerObj->Id,
                DefaultValue => 0,
            }
        },
        # Time Estimated, Worked, and Left
        (
            map {
                (my $field = $_) =~ s/ //g;
                {
                    name => $_,
                    comp => '/Elements/EditTimeValue',
                    args => {
                        Name => $field,
                        Default => $defaults{$field} || $TicketObj->$field,
                    }
                }
            } ('Time Estimated', 'Time Worked', 'Time Left')
        ),
        # Priority and Final Priority
        (
            map {
                (my $field = $_) =~ s/ //g;
                {
                    name => $_,
                    comp => '/Elements/SelectPriority',
                    args => {
                        Name => $field,
                        Default => $defaults{$field} || $TicketObj->$field,
                    }
                }
            } ('Priority', 'Final Priority')
        ),
    );
}

$m->callback( CallbackName => 'MassageFields', %ARGS, TicketObj => $TicketObj, Fields => \@fields );

# Process the field list, skipping if html is provided and running the
# components otherwise
for my $field (@fields) {
    next if defined $field->{'html'};
    if ( $field->{'comp'} ) {
        $field->{'html'} = $m->scomp($field->{'comp'}, %{$field->{'args'} || {}});
    }
}
#line 1 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2015 Best Practical Solutions, LLC
#                                          <sales@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
$m->print( '
' );
#line 131 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
 unless ($InTable) {
$m->print( '<table>
' );
#line 133 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
 }
 for my $field (@fields) {
$m->print( ' <tr class="' );
#line 135 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( lc $field->{'name'} )) );
#line 135 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
$m->print( '">' );
#line 136 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
$m->print( '<td class="label">' );
#line 136 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( loc($field->{'name'}) )) );
#line 136 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
$m->print( ':</td>' );
#line 137 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
$m->print( '<td class="value">' );
#line 137 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
$m->print(  $field->{'html'} );
#line 137 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
$m->print( '</td>' );
#line 138 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
$m->print( '</tr>
' );
#line 139 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
 }
 $m->callback( CallbackName => 'EndOfList', TicketObj => $TicketObj, %ARGS, Fields => \@fields );
 unless ($InTable) {
$m->print( '</table>
' );
#line 143 "/var/www/localhost/htdocs/rt/Ticket/Elements/EditBasics"
 }
$m->print( '
' );
;return;
},
'declared_args' => {
  '$InTable' => { default => ' 0' },
  '$TicketObj' => { default => ' undef' },
  '%defaults' => { default => ' ()' },
  '@fields' => { default => ' ()' }
},
'load_time' => 1432962916,

)
;