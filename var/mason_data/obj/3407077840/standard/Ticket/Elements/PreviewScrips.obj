package HTML::Mason::Commands;
use strict;
use vars qw($m $DECODED_ARGS $r %session);
HTML::Mason::Component::FileBased->new(
'code' => sub {
HTML::Mason::Exception::Params->throw
    ( error =>
      "Odd number of parameters passed to component expecting name/value pairs"
    ) if @_ % 2;
my %ARGS = @_;
my ( $TicketObj );
{
    my %pos;
    for ( my $x = 0; $x < @_; $x += 2 )
    {
        $pos{ $_[$x] } = $x + 1;
    }
#line 49 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
     $TicketObj = exists $pos{'TicketObj'} ? $_[ $pos{'TicketObj'} ] :  undef;
}
$m->debug_hook( $m->current_comp->path ) if ( HTML::Mason::Compiler::IN_PERL_DB() );

#line 51 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"

my $Object = $m->notes("DryRun-".$TicketObj->Id) || $TicketObj->DryRun(%ARGS);
my %recips = %{ $m->notes("DryRun-Recipients-".$TicketObj->Id) || {} };
return unless $Object;

my %squelched = ProcessTransactionSquelching( \%ARGS );
#line 1 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2015 Best Practical Solutions, LLC
#                                          <sales@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
$m->print( '<p>
' );
#line 59 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->comp( { content => sub {
#line 60 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( 'Uncheck boxes to disable notifications to the listed recipients <b>for this transaction only</b>; persistent squelching is managed on the <a href="[_1]">People page</a>.' );
#line 60 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
} }, '/l', RT->Config->Get('WebPath')."/Ticket/ModifyPeople.html?id=".$TicketObj->Id,
 );
#line 60 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '
</p>

' );
#line 63 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
 if ( $Object->Scrips ) {
     # Sort scrips with recipients before those without
     my @scrips = map { $_->[0] }
                  sort { ($b->[1]?1:0) <=> ($a->[1]?1:0) }
                  map { [$_, $_->ActionObj->Action->To + $_->ActionObj->Action->Cc + $_->ActionObj->Action->Bcc] }
                  grep {$_->ActionObj->Action->isa('RT::Action::SendEmail')}
                  @{$Object->Scrips->Prepared};
     for my $scrip (@scrips) {
$m->print( '          <b>' );
#line 71 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $scrip->Description || loc('Scrip #[_1]',$scrip->id) )) );
#line 71 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '</b><br />
          ' );
#line 72 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->comp( { content => sub {
#line 72 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '[_1] [_2] with template [_3]' );
#line 72 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
} }, '/l', loc($scrip->ConditionObj->Name), loc($scrip->ActionObj->Name), loc($scrip->Template)
 );
#line 72 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '
          <br />
' );
#line 74 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
         for my $type (qw(To Cc Bcc)) {
             my @addresses =  $scrip->ActionObj->Action->$type();
             next unless @addresses;
$m->print( '              <ul>
' );
#line 78 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
             for my $addr (@addresses) {
$m->print( '                  <li>
' );
#line 80 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
                 my $checked = not $squelched{$addr->address};
                 $m->callback(CallbackName => 'BeforeAddress', Ticket => $TicketObj, Address => $addr, Type => $type, Checked => \$checked);
                 $recips{$addr->address}++;
$m->print( '                  <b>' );
#line 83 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } (loc($type))) );
#line 83 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '</b>: <input type="checkbox" class="checkbox" name="TxnSendMailTo" ' );
#line 83 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print(  $checked ? 'checked="checked"' : '' );
#line 83 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( ' value="' );
#line 83 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ($addr->address)) );
#line 83 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '" id="TxnSendMailTo-' );
#line 83 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $addr->address )) );
#line 83 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '-' );
#line 83 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $recips{$addr->address} )) );
#line 83 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '" />
                  <label for="TxnSendMailTo-' );
#line 84 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $addr->address )) );
#line 84 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '-' );
#line 84 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( $recips{$addr->address} )) );
#line 84 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '">' );
#line 84 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->comp(   '/Elements/ShowUser', Address => $addr   
); #line 84 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '</label>
' );
#line 85 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
                 $m->callback(CallbackName => 'AfterAddress', Ticket => $TicketObj, Address => $addr, Type => $type);
$m->print( '                  </li>
' );
#line 87 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
             }
$m->print( '              </ul>
' );
#line 89 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
         }
         if (RT->Config->Get('PreviewScripMessages')) {
$m->print( '              <textarea cols="80" rows="5">' );
#line 91 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( (map {; $m->interp->apply_escapes($_, 'h') } ( Encode::decode( "UTF-8", $scrip->ActionObj->Action->TemplateObj->MIMEObj->as_string ))) );
#line 91 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
$m->print( '</textarea>
' );
#line 92 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
         }
$m->print( '          <br />
' );
#line 94 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
     }
 }
$m->print( '
' );
#line 97 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
 $m->callback( CallbackName => 'AfterRecipients', TicketObj => $TicketObj );
$m->print( '
' );
#line 99 "/var/www/localhost/htdocs/rt/Ticket/Elements/PreviewScrips"
 $m->notes("DryRun-Recipients-".$TicketObj->Id, \%recips);
;return;
},
'declared_args' => {
  '$TicketObj' => { default => ' undef' }
},
'load_time' => 1432969611,

)
;