package HTML::Mason::Commands;
use strict;
use vars qw($m $DECODED_ARGS $r %session);
HTML::Mason::Component::FileBased->new(
'code' => sub {
HTML::Mason::Exception::Params->throw
    ( error =>
      "Odd number of parameters passed to component expecting name/value pairs"
    ) if @_ % 2;
my ( $Condition );
{
    my %pos;
    for ( my $x = 0; $x < @_; $x += 2 )
    {
        $pos{ $_[$x] } = $x + 1;
    }
#line 98 "/var/www/localhost/htdocs/rt/Search/Elements/ConditionRow"
     $Condition = exists $pos{'Condition'} ? $_[ $pos{'Condition'} ] :  {};
}
$m->debug_hook( $m->current_comp->path ) if ( HTML::Mason::Compiler::IN_PERL_DB() );

#line 53 "/var/www/localhost/htdocs/rt/Search/Elements/ConditionRow"

return unless $Condition && $Condition->{'Name'};

$m->callback( Condition => \$Condition );
return unless $Condition;

my $handle_block;
$handle_block = sub {
    my $box = shift;
    return $box unless ref $box;

    my $name = shift;
    if ( UNIVERSAL::isa($box, 'ARRAY') ) {
        my $res = '';
        $res .= $handle_block->( $_, $name ) foreach @$box;
        return $res;
    }

    return undef unless UNIVERSAL::isa($box, 'HASH');
    if ( $box->{'Type'} eq 'component' ) {
        $box->{'Arguments'} ||= {},
        return $m->scomp( $box->{'Path'}, %{ $box->{'Arguments'} }, Name => $name );
    }
    if ( $box->{'Type'} eq 'text' ) {
        $box->{id} ||= $box->{name} ||= $name;
        $box->{value} ||= delete($box->{Default}) || '';
        return "<input ".join(" ", map{$m->interp->apply_escapes(lc($_),'h')
                                      .q{="}.$m->interp->apply_escapes($box->{$_},'h').q{"}}
                                   sort keys %$box)." />";
    }
    if ( $box->{'Type'} eq 'select' ) {
        my $res = '';
        $res .= qq{<select id="$name" name="$name">};
        my @options = @{ $box->{'Options'} };
        while( my $k = shift @options ) {
            my $v = shift @options;
            $res .= qq{<option value="$k">$v</option>};
        }
        $res .= qq{</select>};
        return $res;
    }
};

#line 1 "/var/www/localhost/htdocs/rt/Search/Elements/ConditionRow"
# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2015 Best Practical Solutions, LLC
#                                          <sales@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
$m->print( '<tr>
<td class="label">' );
#line 49 "/var/www/localhost/htdocs/rt/Search/Elements/ConditionRow"
$m->print(  $handle_block->( $Condition->{'Field'}, $Condition->{'Name'} .'Field' ) );
#line 49 "/var/www/localhost/htdocs/rt/Search/Elements/ConditionRow"
$m->print( '</td>
<td class="operator">' );
#line 50 "/var/www/localhost/htdocs/rt/Search/Elements/ConditionRow"
$m->print(  $handle_block->( $Condition->{'Op'}, $Condition->{'Name'} .'Op') );
#line 50 "/var/www/localhost/htdocs/rt/Search/Elements/ConditionRow"
$m->print( '</td>
<td class="value">' );
#line 51 "/var/www/localhost/htdocs/rt/Search/Elements/ConditionRow"
$m->print(  $handle_block->( $Condition->{'Value'}, 'ValueOf'. $Condition->{'Name'} ) );
#line 51 "/var/www/localhost/htdocs/rt/Search/Elements/ConditionRow"
$m->print( '</td>
</tr>
' );
;return;
},
'declared_args' => {
  '$Condition' => { default => ' {}' }
},
'load_time' => 1434746455,

)
;