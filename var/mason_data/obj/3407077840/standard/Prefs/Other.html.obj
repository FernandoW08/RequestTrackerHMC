package HTML::Mason::Commands;
use strict;
use vars qw($m $DECODED_ARGS $r %session);
HTML::Mason::Component::FileBased->new(
'code' => sub {
HTML::Mason::Exception::Params->throw
    ( error =>
      "Odd number of parameters passed to component expecting name/value pairs"
    ) if @_ % 2;
my %ARGS = @_;
my ( $Update, $User, $PreferredKey );
{
    my %pos;
    for ( my $x = 0; $x < @_; $x += 2 )
    {
        $pos{ $_[$x] } = $x + 1;
    }
#line 107 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
     $Update = exists $pos{'Update'} ? $_[ $pos{'Update'} ] :  0,;
#line 108 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
     $User = exists $pos{'User'} ? $_[ $pos{'User'} ] :  undef,;
#line 109 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
     $PreferredKey = exists $pos{'PreferredKey'} ? $_[ $pos{'PreferredKey'} ] :  undef,;
}
$m->debug_hook( $m->current_comp->path ) if ( HTML::Mason::Compiler::IN_PERL_DB() );

#line 78 "/var/www/localhost/htdocs/rt/Prefs/Other.html"

my @results;
my $title = loc("Preferences");

my $UserObj = $session{'CurrentUser'}->UserObj;
my $preferences = $UserObj->Preferences( $RT::System );

if (defined($PreferredKey) and (not $UserObj->FirstAttribute('PreferredKey')
        or $PreferredKey ne $UserObj->FirstAttribute('PreferredKey')->Content)) {
    my ($code, $msg) = $UserObj->SetAttribute(Name => 'PreferredKey', Content => $PreferredKey);
    push @results, loc('Preferred Key: [_1]', $msg) unless $code;
}

if ( $Update ) {
    $preferences ||= {};
    $m->comp( '/Widgets/BulkProcess', Meta => {
                map { $_ => RT->Config->Meta($_) } RT->Config->Options
            },
            Store => $preferences,
            Types => [RT->Config->Options], Default => 1, Arguments => \%ARGS,
            DefaultValue => { map { $_ => RT->Config->Get($_) }
                RT->Config->Options
            }, );

    my ($ok, $msg) = $UserObj->SetPreferences( $RT::System, $preferences );
    push @results, $ok ? loc("Preferences saved.") : $msg;
}
#line 1 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2015 Best Practical Solutions, LLC
#                                          <sales@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
$m->comp(   '/Elements/Header', Title => $title   
); #line 48 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( '
' );
#line 49 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->comp(   '/Elements/Tabs'  
); #line 49 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( '
' );
#line 50 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->comp(   '/Elements/ListActions', actions => \@results   
); #line 50 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( '

<form method="post" action="Other.html" name="ModifyPreferences" id="ModifyPreferences">
' );
#line 53 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
 foreach my $section( RT->Config->Sections ) {
$m->comp( { content => sub {
#line 54 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( '
' );
#line 55 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
 foreach my $option( RT->Config->Options( Section => $section ) ) {
 next if $option eq 'EmailFrequency' && !RT->Config->Get('RecordOutgoingEmail');
 my $meta = RT->Config->Meta( $option );
$m->comp(   $meta->{'Widget'},
    Default      => 1,
    %{ $m->comp('/Widgets/FinalizeWidgetArguments', WidgetArguments =>
            $meta->{'WidgetArguments'} ) },
    Name         => $option,
    DefaultValue => scalar RT->Config->Get( $option ),
    CurrentValue => $preferences->{ $option },
  
); #line 65 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( '
' );
#line 66 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
 }
} }, '/Widgets/TitleBox', title => loc( $section )
 );
#line 67 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( '
' );
#line 68 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
 }
$m->print( '
' );
#line 70 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
 if ( RT->Config->Get('Crypt')->{'Enable'} ) {
$m->comp( { content => sub {
#line 71 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( '
' );
#line 72 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->comp( { content => sub {
#line 72 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( 'Preferred key' );
#line 72 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
} }, '/l'
 );
#line 72 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( ': ' );
#line 72 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->comp(   '/Elements/Crypt/SelectKeyForEncryption', EmailAddress => $UserObj->EmailAddress, Default => $UserObj->PreferredKey   
); #line 72 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( '
' );
#line 73 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
} }, '/Widgets/TitleBox', title => loc( 'Cryptography' )
 );
#line 73 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( '
' );
#line 74 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
 }
$m->print( '
' );
#line 76 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->comp(   '/Elements/Submit', Name => 'Update', Label => loc('Save Changes')   
); #line 76 "/var/www/localhost/htdocs/rt/Prefs/Other.html"
$m->print( '
</form>
' );
;return;
},
'declared_args' => {
  '$PreferredKey' => { default => ' undef,' },
  '$Update' => { default => ' 0,' },
  '$User' => { default => ' undef,' }
},
'load_time' => 1434757010,

)
;